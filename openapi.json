{
  "openapi": "3.0.3",
  "info": {
    "title": "B-Connects API",
    "description": "B-Connects is app that provides an overview of Indonesian culture, featuring a menu that covers various aspects of culture, such as cultural names, locations, traditional clothing, and more. This API providing secure authentication features such as user registration and login. Empowering the Indonesian Culture App with seamless and reliable user management.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    },
    {
      "url": ""
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "User registration with JSON"
    },
    {
      "name": "users",
      "description": "Direct user registration without auth"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register New User",
        "description": "Register a new user in the system.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful. A token will be generated and can be used for login."
          },
          "400": {
            "description": "Invalid request"
          },
          "409": {
            "description": "Email is already in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log into the System",
        "description": "Log into the system with a registered account.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  },
                  "token": {
                    "type": "string",
                    "description": "Authentication token for registered user."
                  }
                },
                "required": [
                  "email",
                  "password",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Incorrect password"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Create New User",
        "description": "Create a new user in the system.",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "409": {
            "description": "Email is already in use"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Get User Data",
        "description": "Read user data based on ID.",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to be read",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update User Data",
        "description": "Update user data based on ID.",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Delete user data based on ID.",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
}